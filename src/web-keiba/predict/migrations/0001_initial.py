# Generated by Django 3.2.5 on 2021-07-21 00:58

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Bms',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bms_id', models.TextField(blank=True, null=True)),
                ('bms_rank', models.IntegerField(blank=True, null=True)),
                ('bms_horse_num', models.IntegerField(blank=True, null=True)),
                ('bms_horse_win_num', models.IntegerField(blank=True, null=True)),
                ('bms_race_num', models.IntegerField(blank=True, null=True)),
                ('bms_race_win_num', models.IntegerField(blank=True, null=True)),
                ('bms_graded_race', models.IntegerField(blank=True, null=True)),
                ('bms_graded_race_win', models.IntegerField(blank=True, null=True)),
                ('bms_special_race', models.IntegerField(blank=True, null=True)),
                ('bms_special_race_win', models.IntegerField(blank=True, null=True)),
                ('bms_general_race', models.IntegerField(blank=True, null=True)),
                ('bms_general_race_win', models.IntegerField(blank=True, null=True)),
                ('bms_turf_race', models.IntegerField(blank=True, null=True)),
                ('bms_turf_race_win', models.IntegerField(blank=True, null=True)),
                ('bms_dirt_race', models.IntegerField(blank=True, null=True)),
                ('bms_dirt_race_win', models.IntegerField(blank=True, null=True)),
                ('bms_win_rate', models.FloatField(blank=True, null=True)),
                ('bms_ei', models.FloatField(blank=True, null=True)),
                ('bms_get_prize', models.FloatField(blank=True, null=True)),
                ('bms_average_turf_dist', models.FloatField(blank=True, null=True)),
                ('bms_average_dirt_dist', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'bms',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Breed',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('breed_id', models.TextField(blank=True, null=True)),
                ('breed_rank', models.IntegerField(blank=True, null=True)),
                ('breed_horse_num', models.IntegerField(blank=True, null=True)),
                ('breed_horse_win_num', models.IntegerField(blank=True, null=True)),
                ('breed_race_num', models.IntegerField(blank=True, null=True)),
                ('breed_race_win_num', models.IntegerField(blank=True, null=True)),
                ('breed_graded_race', models.IntegerField(blank=True, null=True)),
                ('breed_graded_race_win', models.IntegerField(blank=True, null=True)),
                ('breed_special_race', models.IntegerField(blank=True, null=True)),
                ('breed_special_race_win', models.IntegerField(blank=True, null=True)),
                ('breed_general_race', models.IntegerField(blank=True, null=True)),
                ('breed_general_race_win', models.IntegerField(blank=True, null=True)),
                ('breed_turf_race', models.IntegerField(blank=True, null=True)),
                ('breed_turf_race_win', models.IntegerField(blank=True, null=True)),
                ('breed_dirt_race', models.IntegerField(blank=True, null=True)),
                ('breed_dirt_race_win', models.IntegerField(blank=True, null=True)),
                ('breed_win_rate', models.FloatField(blank=True, null=True)),
                ('breed_ei', models.FloatField(blank=True, null=True)),
                ('breed_get_prize', models.FloatField(blank=True, null=True)),
                ('breed_average_turf_dist', models.FloatField(blank=True, null=True)),
                ('breed_average_dirt_dist', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'breed',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HorseBase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('horse_id', models.IntegerField(blank=True, null=True)),
                ('birth_year', models.IntegerField(blank=True, null=True)),
                ('birth_month', models.IntegerField(blank=True, null=True)),
                ('birth_date', models.IntegerField(blank=True, null=True)),
                ('owner_id', models.TextField(blank=True, null=True)),
                ('breeder_id', models.TextField(blank=True, null=True)),
                ('father_id', models.TextField(blank=True, null=True)),
                ('father_father_id', models.TextField(blank=True, null=True)),
                ('father_mother_id', models.TextField(blank=True, null=True)),
                ('mother_id', models.TextField(blank=True, null=True)),
                ('mother_father_id', models.TextField(blank=True, null=True)),
                ('mother_mother_id', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'horse_base',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HorseRace',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('race_id', models.IntegerField(blank=True, null=True)),
                ('race_name', models.TextField(blank=True, null=True)),
                ('race_date', models.TextField(blank=True, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('month', models.IntegerField(blank=True, null=True)),
                ('date', models.IntegerField(blank=True, null=True)),
                ('place', models.IntegerField(blank=True, null=True)),
                ('horse_weather', models.IntegerField(blank=True, null=True)),
                ('horse_race_number', models.IntegerField(blank=True, null=True)),
                ('starters_number', models.IntegerField(blank=True, null=True)),
                ('waku', models.IntegerField(blank=True, null=True)),
                ('horse_number', models.IntegerField(blank=True, null=True)),
                ('odds', models.FloatField(blank=True, null=True)),
                ('popularity', models.IntegerField(blank=True, null=True)),
                ('rank', models.IntegerField(blank=True, null=True)),
                ('jockey_id', models.TextField(blank=True, null=True)),
                ('jockey_weight', models.FloatField(blank=True, null=True)),
                ('field', models.IntegerField(blank=True, null=True)),
                ('dist', models.IntegerField(blank=True, null=True)),
                ('field_condition', models.IntegerField(blank=True, null=True)),
                ('race_time', models.FloatField(blank=True, null=True)),
                ('diff', models.FloatField(blank=True, null=True)),
                ('corner_rank_1st', models.IntegerField(blank=True, null=True)),
                ('corner_rank_2nd', models.IntegerField(blank=True, null=True)),
                ('corner_rank_3rd', models.IntegerField(blank=True, null=True)),
                ('corner_rank_4th', models.IntegerField(blank=True, null=True)),
                ('pace1', models.FloatField(blank=True, null=True)),
                ('pace2', models.FloatField(blank=True, null=True)),
                ('three_halon', models.FloatField(blank=True, null=True)),
                ('horse_weight', models.IntegerField(blank=True, null=True)),
                ('horse_weight_change', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'horse_race',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Jockey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('jockey_id', models.IntegerField(blank=True, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('jockey_year_rank', models.IntegerField(blank=True, null=True)),
                ('jockey_year_1st', models.IntegerField(blank=True, null=True)),
                ('jockey_year_2nd', models.IntegerField(blank=True, null=True)),
                ('jockey_year_3rd', models.IntegerField(blank=True, null=True)),
                ('jockey_year_4th', models.IntegerField(blank=True, null=True)),
                ('jockey_year_graded_race', models.IntegerField(blank=True, null=True)),
                ('jockey_year_graded_race_win', models.IntegerField(blank=True, null=True)),
                ('jockey_year_special_race', models.IntegerField(blank=True, null=True)),
                ('jockey_year_special_race_win', models.IntegerField(blank=True, null=True)),
                ('jockey_year_general_race', models.IntegerField(blank=True, null=True)),
                ('jockey_year_general_race_win', models.IntegerField(blank=True, null=True)),
                ('jockey_year_turf_race', models.IntegerField(blank=True, null=True)),
                ('jockey_year_turf_race_win', models.IntegerField(blank=True, null=True)),
                ('jockey_year_dirt_race', models.IntegerField(blank=True, null=True)),
                ('jockey_year_dirt_race_win', models.IntegerField(blank=True, null=True)),
                ('jockey_year_win_rate', models.FloatField(blank=True, null=True)),
                ('jockey_year_1st_or_2nd_rate', models.FloatField(blank=True, null=True)),
                ('jockey_year_show_rate', models.FloatField(blank=True, null=True)),
                ('jockey_year_get_prize', models.FloatField(blank=True, null=True)),
                ('jockey_total_1st', models.IntegerField(blank=True, null=True)),
                ('jockey_total_2nd', models.IntegerField(blank=True, null=True)),
                ('jockey_total_3rd', models.IntegerField(blank=True, null=True)),
                ('jockey_total_4th', models.IntegerField(blank=True, null=True)),
                ('jockey_total_graded_race', models.IntegerField(blank=True, null=True)),
                ('jockey_total_graded_race_win', models.IntegerField(blank=True, null=True)),
                ('jockey_total_special_race', models.IntegerField(blank=True, null=True)),
                ('jockey_total_special_race_win', models.IntegerField(blank=True, null=True)),
                ('jockey_total_general_race', models.IntegerField(blank=True, null=True)),
                ('jockey_total_general_race_win', models.IntegerField(blank=True, null=True)),
                ('jockey_total_turf_race', models.IntegerField(blank=True, null=True)),
                ('jockey_total_turf_race_win', models.IntegerField(blank=True, null=True)),
                ('jockey_total_dirt_race', models.IntegerField(blank=True, null=True)),
                ('jockey_total_dirt_race_win', models.IntegerField(blank=True, null=True)),
                ('jockey_total_win_rate', models.FloatField(blank=True, null=True)),
                ('jockey_total_1st_or_2nd_rate', models.FloatField(blank=True, null=True)),
                ('jockey_total_show_rate', models.FloatField(blank=True, null=True)),
                ('jockey_total_get_prize', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'jockey',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Owner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('owner_id', models.IntegerField(blank=True, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('owner_year_rank', models.IntegerField(blank=True, null=True)),
                ('owner_year_1st', models.IntegerField(blank=True, null=True)),
                ('owner_year_2nd', models.IntegerField(blank=True, null=True)),
                ('owner_year_3rd', models.IntegerField(blank=True, null=True)),
                ('owner_year_4th', models.IntegerField(blank=True, null=True)),
                ('owner_year_graded_race', models.IntegerField(blank=True, null=True)),
                ('owner_year_graded_race_win', models.IntegerField(blank=True, null=True)),
                ('owner_year_special_race', models.IntegerField(blank=True, null=True)),
                ('owner_year_special_race_win', models.IntegerField(blank=True, null=True)),
                ('owner_year_general_race', models.IntegerField(blank=True, null=True)),
                ('owner_year_general_race_win', models.IntegerField(blank=True, null=True)),
                ('owner_year_turf_race', models.IntegerField(blank=True, null=True)),
                ('owner_year_turf_race_win', models.IntegerField(blank=True, null=True)),
                ('owner_year_dirt_race', models.IntegerField(blank=True, null=True)),
                ('owner_year_dirt_race_win', models.IntegerField(blank=True, null=True)),
                ('owner_year_win_rate', models.FloatField(blank=True, null=True)),
                ('owner_year_1st_or_2nd_rate', models.FloatField(blank=True, null=True)),
                ('owner_year_show_rate', models.FloatField(blank=True, null=True)),
                ('owner_year_get_prize', models.FloatField(blank=True, null=True)),
                ('owner_total_1st', models.IntegerField(blank=True, null=True)),
                ('owner_total_2nd', models.IntegerField(blank=True, null=True)),
                ('owner_total_3rd', models.IntegerField(blank=True, null=True)),
                ('owner_total_4th', models.IntegerField(blank=True, null=True)),
                ('owner_total_graded_race', models.IntegerField(blank=True, null=True)),
                ('owner_total_graded_race_win', models.IntegerField(blank=True, null=True)),
                ('owner_total_special_race', models.IntegerField(blank=True, null=True)),
                ('owner_total_special_race_win', models.IntegerField(blank=True, null=True)),
                ('owner_total_general_race', models.IntegerField(blank=True, null=True)),
                ('owner_total_general_race_win', models.IntegerField(blank=True, null=True)),
                ('owner_total_turf_race', models.IntegerField(blank=True, null=True)),
                ('owner_total_turf_race_win', models.IntegerField(blank=True, null=True)),
                ('owner_total_dirt_race', models.IntegerField(blank=True, null=True)),
                ('owner_total_dirt_race_win', models.IntegerField(blank=True, null=True)),
                ('owner_total_win_rate', models.FloatField(blank=True, null=True)),
                ('owner_total_1st_or_2nd_rate', models.FloatField(blank=True, null=True)),
                ('owner_total_show_rate', models.FloatField(blank=True, null=True)),
                ('owner_total_get_prize', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'owner',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Race',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('race_id', models.IntegerField(blank=True, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('month', models.IntegerField(blank=True, null=True)),
                ('date', models.IntegerField(blank=True, null=True)),
                ('place', models.IntegerField(blank=True, null=True)),
                ('race_class', models.IntegerField(blank=True, null=True)),
                ('race_number', models.IntegerField(blank=True, null=True)),
                ('field', models.IntegerField(blank=True, null=True)),
                ('dist', models.IntegerField(blank=True, null=True)),
                ('field_condition', models.IntegerField(blank=True, null=True)),
                ('l_or_r', models.IntegerField(blank=True, null=True)),
                ('weather', models.IntegerField(blank=True, null=True)),
                ('starters_number', models.IntegerField(blank=True, null=True)),
                ('rank', models.IntegerField(blank=True, null=True)),
                ('waku', models.IntegerField(blank=True, null=True)),
                ('horse_number', models.IntegerField(blank=True, null=True)),
                ('horse_id', models.IntegerField(blank=True, null=True)),
                ('horse_name', models.TextField(blank=True, null=True)),
                ('gender', models.IntegerField(blank=True, null=True)),
                ('age', models.IntegerField(blank=True, null=True)),
                ('jockey_weight', models.FloatField(blank=True, null=True)),
                ('jockey_id', models.TextField(blank=True, null=True)),
                ('jockey_name', models.TextField(blank=True, null=True)),
                ('race_time', models.FloatField(blank=True, null=True)),
                ('popularity', models.IntegerField(blank=True, null=True)),
                ('odds', models.FloatField(blank=True, null=True)),
                ('three_halon', models.FloatField(blank=True, null=True)),
                ('corner_rank_1st', models.IntegerField(blank=True, null=True)),
                ('corner_rank_2nd', models.IntegerField(blank=True, null=True)),
                ('corner_rank_3rd', models.IntegerField(blank=True, null=True)),
                ('corner_rank_4th', models.IntegerField(blank=True, null=True)),
                ('training_center', models.IntegerField(blank=True, null=True)),
                ('trainer_id', models.TextField(blank=True, null=True)),
                ('trainer_name', models.TextField(blank=True, null=True)),
                ('horse_weight', models.IntegerField(blank=True, null=True)),
                ('horse_weight_change', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'race',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RaceRealtime',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('race_id', models.TextField(blank=True, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('month', models.IntegerField(blank=True, null=True)),
                ('date', models.IntegerField(blank=True, null=True)),
                ('place', models.IntegerField(blank=True, null=True)),
                ('race_class', models.IntegerField(blank=True, null=True)),
                ('race_number', models.IntegerField(blank=True, null=True)),
                ('field', models.IntegerField(blank=True, null=True)),
                ('dist', models.IntegerField(blank=True, null=True)),
                ('field_condition', models.IntegerField(blank=True, null=True)),
                ('l_or_r', models.IntegerField(blank=True, null=True)),
                ('weather', models.IntegerField(blank=True, null=True)),
                ('starters_number', models.IntegerField(blank=True, null=True)),
                ('rank', models.IntegerField(blank=True, null=True)),
                ('waku', models.IntegerField(blank=True, null=True)),
                ('horse_number', models.IntegerField(blank=True, null=True)),
                ('horse_id', models.TextField(blank=True, null=True)),
                ('horse_name', models.TextField(blank=True, null=True)),
                ('gender', models.IntegerField(blank=True, null=True)),
                ('age', models.IntegerField(blank=True, null=True)),
                ('jockey_weight', models.FloatField(blank=True, null=True)),
                ('jockey_id', models.TextField(blank=True, null=True)),
                ('jockey_name', models.TextField(blank=True, null=True)),
                ('race_time', models.IntegerField(blank=True, null=True)),
                ('popularity', models.IntegerField(blank=True, null=True)),
                ('odds', models.FloatField(blank=True, null=True)),
                ('training_center', models.IntegerField(blank=True, null=True)),
                ('trainer_id', models.TextField(blank=True, null=True)),
                ('trainer_name', models.TextField(blank=True, null=True)),
                ('horse_weight', models.IntegerField(blank=True, null=True)),
                ('horse_weight_change', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'race_realtime',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Trainer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trainer_id', models.IntegerField(blank=True, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('trainer_year_rank', models.IntegerField(blank=True, null=True)),
                ('trainer_year_1st', models.IntegerField(blank=True, null=True)),
                ('trainer_year_2nd', models.IntegerField(blank=True, null=True)),
                ('trainer_year_3rd', models.IntegerField(blank=True, null=True)),
                ('trainer_year_4th', models.IntegerField(blank=True, null=True)),
                ('trainer_year_graded_race', models.IntegerField(blank=True, null=True)),
                ('trainer_year_graded_race_win', models.IntegerField(blank=True, null=True)),
                ('trainer_year_special_race', models.IntegerField(blank=True, null=True)),
                ('trainer_year_special_race_win', models.IntegerField(blank=True, null=True)),
                ('trainer_year_general_race', models.IntegerField(blank=True, null=True)),
                ('trainer_year_general_race_win', models.IntegerField(blank=True, null=True)),
                ('trainer_year_turf_race', models.IntegerField(blank=True, null=True)),
                ('trainer_year_turf_race_win', models.IntegerField(blank=True, null=True)),
                ('trainer_year_dirt_race', models.IntegerField(blank=True, null=True)),
                ('trainer_year_dirt_race_win', models.IntegerField(blank=True, null=True)),
                ('trainer_year_win_rate', models.FloatField(blank=True, null=True)),
                ('trainer_year_1st_or_2nd_rate', models.FloatField(blank=True, null=True)),
                ('trainer_year_show_rate', models.FloatField(blank=True, null=True)),
                ('trainer_year_get_prize', models.FloatField(blank=True, null=True)),
                ('trainer_total_1st', models.IntegerField(blank=True, null=True)),
                ('trainer_total_2nd', models.IntegerField(blank=True, null=True)),
                ('trainer_total_3rd', models.IntegerField(blank=True, null=True)),
                ('trainer_total_4th', models.IntegerField(blank=True, null=True)),
                ('trainer_total_graded_race', models.IntegerField(blank=True, null=True)),
                ('trainer_total_graded_race_win', models.IntegerField(blank=True, null=True)),
                ('trainer_total_special_race', models.IntegerField(blank=True, null=True)),
                ('trainer_total_special_race_win', models.IntegerField(blank=True, null=True)),
                ('trainer_total_general_race', models.IntegerField(blank=True, null=True)),
                ('trainer_total_general_race_win', models.IntegerField(blank=True, null=True)),
                ('trainer_total_turf_race', models.IntegerField(blank=True, null=True)),
                ('trainer_total_turf_race_win', models.IntegerField(blank=True, null=True)),
                ('trainer_total_dirt_race', models.IntegerField(blank=True, null=True)),
                ('trainer_total_dirt_race_win', models.IntegerField(blank=True, null=True)),
                ('trainer_total_win_rate', models.FloatField(blank=True, null=True)),
                ('trainer_total_1st_or_2nd_rate', models.FloatField(blank=True, null=True)),
                ('trainer_total_show_rate', models.FloatField(blank=True, null=True)),
                ('trainer_total_get_prize', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'trainer',
                'managed': False,
            },
        ),
    ]
